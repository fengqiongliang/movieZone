<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.moviezone.dao.UserDao" >
  <resultMap id="UserResultMap" type="com.moviezone.domain.User" >
    <id column="userid" property="userid" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="faceurl" property="faceurl" jdbcType="VARCHAR" />
    <result column="cookie_id" property="cookie_id" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="VARCHAR" />
    <result column="lastlogtime" property="lastlogtime" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="createip" property="createip" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="createarea" property="createarea" jdbcType="VARCHAR" />
    <result column="nextnick" property="nextnick" jdbcType="VARCHAR" />
    <result column="nextface" property="nextface" jdbcType="VARCHAR" />
    <result column="isForbit" property="isForbit" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="UserNickResultMap" type="com.moviezone.domain.UserNick" >
    <id column="newnick" property="newnick" jdbcType="VARCHAR" />
    <result column="oldnick" property="oldnick" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="UserColumns" >
    userid, username,password,nickname,faceurl,cookie_id,role,lastlogtime,updatetime,createip,createtime,createarea,nextnick,nextface,isForbit
  </sql>
  <sql id="userIFColumns">
  	<if test="userid >0">  and userid = #{userid,jdbcType=BIGINT} </if>
    <if test="username != null">  and username = #{username,jdbcType=VARCHAR} </if>
    <if test="password != null">  and password = #{password,jdbcType=VARCHAR} </if>
    <if test="nickname != null"> and nickname = #{nickname,jdbcType=VARCHAR} </if>
    <if test="faceurl != null"> and faceurl = #{faceurl,jdbcType=VARCHAR} </if>
    <if test="cookie_id != null"> and cookie_id = #{cookie_id,jdbcType=VARCHAR} </if>
    <if test="role != null"> and role = #{role,jdbcType=VARCHAR} </if>
    <if test="createip != null"> and createip = #{createip,jdbcType=VARCHAR} </if>
    <if test="createarea != null"> and createarea = #{createarea,jdbcType=VARCHAR} </if>
    <if test="nextnick != null"> and nextnick = #{nextnick,jdbcType=VARCHAR} </if>
    <if test="nextface != null"> and nextface = #{nextface,jdbcType=VARCHAR} </if>
    <if test="isForbit != null"> and isForbit = #{isForbit,jdbcType=VARCHAR} </if>
  </sql>
  <sql id="forbitUserIFColumns">
  	<if test="userid >0">  and userid = #{userid,jdbcType=BIGINT} </if>
    <if test="nickname != null"> and nickname = #{nickname,jdbcType=VARCHAR} </if>
    <if test="createip != null"> and createip = #{createip,jdbcType=VARCHAR} </if>
    <if test="createarea != null"> and createarea = #{createarea,jdbcType=VARCHAR} </if>
  </sql>
  
  <select id="selectUserCount" resultType="map" parameterType="map"  >
    select 'false' as QUERYID, 
    count(userid) as total
    from user where 1=1 
    <include refid="userIFColumns" />
  </select>
  
  <select id="selectUser" resultMap="UserResultMap" parameterType="map"  >
    select 'false' as QUERYID, 
    <include refid="UserColumns" /> 
    from user where 1=1 
    <include refid="userIFColumns" />
    limit #{start,jdbcType=INTEGER},#{size,jdbcType=INTEGER}
  </select>
  
  <select id="selectForbitUserCount" resultType="map" parameterType="map"  >
    select 'false' as QUERYID, count(1) as total from (
		select userid,nickname,createip,createarea from forbituser where 1 = 1
		<include refid="forbitUserIFColumns" />
		union all
		select userid,nickname,createip,createarea from user where isForbit = 'true'
		<include refid="forbitUserIFColumns" />
	) t 
  </select>
  
  <select id="selectForbitUser" resultMap="UserResultMap" parameterType="map"  >
    select 'false' as QUERYID, t.* from (
		select userid,nickname,createip,createarea from forbituser where 1 = 1
		<include refid="forbitUserIFColumns" />
		union all
		select userid,nickname,createip,createarea from user where isForbit = 'true'
		<include refid="forbitUserIFColumns" />
	) t 
    limit #{start,jdbcType=INTEGER},#{size,jdbcType=INTEGER}
  </select>
  
  <select id="selectSystemForbit" resultMap="UserResultMap" parameterType="map"  >
		select userid,nickname,createip,createarea from forbituser where 1 =1 
		<include refid="forbitUserIFColumns" />
		 limit #{start,jdbcType=INTEGER},#{size,jdbcType=INTEGER}
  </select>
  
  <select id="selectRandomNick" resultMap="UserNickResultMap" parameterType="map"  >
    select 'false' as QUERYID,a.nickname newnick,b.nickname oldnick from usernick a left join user b on a.nickname = b.nickname
	where 1=1
	order by oldnick asc,rand() 
    limit 0,5
  </select>
  
  <insert id="insertUser" parameterType="com.moviezone.domain.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >userid,</if>
      <if test="username != null" >username,</if>
      <if test="password != null" >password,</if>
      <if test="nickname != null" >nickname,</if>
      <if test="faceurl != null">faceurl,</if>
      <if test="cookie_id != null" >cookie_id,</if>
      <if test="role != null" >role,</if>
      <if test="createip != null" >createip,</if>
      <if test="createarea != null" >createarea,</if>
      lastlogtime,updatetime,createtime
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >#{userid,jdbcType=BIGINT},</if>
      <if test="username != null" >#{username,jdbcType=VARCHAR},</if>
      <if test="password != null" >#{password,jdbcType=VARCHAR},</if>
      <if test="nickname != null" >#{nickname,jdbcType=VARCHAR},</if>
      <if test="faceurl != null">#{faceurl,jdbcType=VARCHAR},</if>
      <if test="cookie_id != null" >#{cookie_id,jdbcType=VARCHAR},</if>
      <if test="role != null" >#{role,jdbcType=VARCHAR},</if>
      <if test="createip != null" >#{createip,jdbcType=VARCHAR},</if>
      <if test="createarea != null" >#{createarea,jdbcType=VARCHAR},</if>
      sysdate(),sysdate(),sysdate()
    </trim>
  </insert>
  
  <insert id="insertForbitUser" parameterType="com.moviezone.domain.User" >
    insert into forbituser (userid,nickname,createip,createarea) 
    values(#{userid,jdbcType=BIGINT},#{nickname,jdbcType=VARCHAR},#{createip,jdbcType=VARCHAR},#{createarea,jdbcType=VARCHAR})
  </insert>
  
  <update id="updateUser" parameterType="com.moviezone.domain.User" >
    update user
    <set>
      <if test="password != null" >password = #{password,jdbcType=VARCHAR},</if>
      <if test="nickname != null" >nickname = #{nickname,jdbcType=VARCHAR},</if>
      <if test="cookie_id != null" >cookie_id = #{cookie_id,jdbcType=VARCHAR},</if>
      <if test="role != null" >role = #{role,jdbcType=VARCHAR},</if>
      <if test="lastlogtime != null" >lastlogtime = #{lastlogtime,jdbcType=TIMESTAMP},</if>
      <if test="nextnick != null" >nextnick = #{nextnick,jdbcType=VARCHAR},</if>
      <if test="nextface != null" >nextface = #{nextface,jdbcType=VARCHAR},</if>
      <if test="isForbit != null" >isForbit = #{isForbit,jdbcType=VARCHAR},</if>
      updatetime = sysdate()
    </set>
    where userid = #{userid,jdbcType=BIGINT}
  </update>
  
  <update id="updateNickOrFace" parameterType="com.moviezone.domain.User" >
    update user
    <set>
      <if test="nextface != null" >faceurl = nextface,</if>
      <if test="nextnick != null" >nickname = nextnick,</if>
      nextnick = null,
      nextface = null,
      updatetime = sysdate()
    </set>
    where userid = #{userid,jdbcType=BIGINT}
  </update>
  
  <delete id="deleteUser" parameterType="com.moviezone.domain.User" >
    delete from user where userid = #{userid,jdbcType=BIGINT}
  </delete>
  
  <delete id="deleteForbitUser" parameterType="com.moviezone.domain.User" >
    delete from forbituser where userid = #{userid,jdbcType=BIGINT}
  </delete>
  
</mapper>